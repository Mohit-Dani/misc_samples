Objavro.schemaˆì{"type":"record","name":"Trace","namespace":"com.tomtom.places.unicorn.domain.avro.trace","fields":[{"name":"traceLevel","type":{"type":"enum","name":"Verbosity","symbols":["TRACE","DEBUG","INFO","WARN","ERROR"]}},{"name":"timestamp","type":["null","long"],"default":null},{"name":"objectId","type":"string"},{"name":"originObjectIds","type":["null",{"type":"array","items":"string"}],"default":null},{"name":"phase","type":{"type":"enum","name":"Phase","symbols":["Intake","StableId","Normalization","Geocoding","Matching","ObservationJoining","Productizing","AssociationResolution"]}},{"name":"traceType","type":{"type":"enum","name":"TraceType","symbols":["Geocoding_AddedTranslation","Geocoding_FailedDistanceTest","Geocoding_GeocodedEntryPoint","Geocoding_GeocodedLocus","Geocoding_GeocodingException","GeocodingAdapter_NoCategories","GeocodingAdapter_ReverseGeocodeSpecifiedWithoutPoint","IntakeDeliveryEntryHandler","LocalityRule_DeliveryLocalityUnrecognized","LocalityRule_IncorrectLocality","LocalityRule_SourcePlace","LocalityRule_SupplierLocalityMismatch","LocalityRule_UsedAddressLocality","LocalityRule_UsedDeliveryLocality","Recode_MultipleMappingsForType","Recode_NoMapping","Recode_NoScheme","CandidateSetAssembler_PlaceWithoutSet","CandidateSets","Clustering_Exception","ClusterOriginIds","Clusterer_RejectDoublePromotion","Clustering_TotalMatchScore","GeoPartitioner_NoValidPoints","GeoPartitioner_NullLoci","IncompleteObservationsJoined","AcronymRule_Name_Normalized","AddressCleaningRule_Normalized","AddressNormalizationRule_Normalized","AddressTitleCasingRule_City","AddressTitleCasingRule_Street","BadLatin1EncodingNameNormalization_Name_Normalized","BrandRecodingRule_AddedBrand","BrandRecodingRule_AddedCategory","BrandRecodingRule_AddedCharacteristic","BrandRecodingRule_AddedPreemptiveCategory","BrandRecodingRule_AddedPreemptiveCharacteristic","BrandRule_AddedCategory","BrandRule_AddedCharacteristic","BrandRule_AddedPreemptiveCategory","BrandRule_AddedPreemptiveCharacteristic","BrandRule_BrandNotDetected","BrandRule_DetectedBrandInBrand","BrandRule_DetectedBrandInName","BrandSpellingRule_Name_Normalized","CategoryDetection_AddedCategory","CategoryDetection_AddedCategoryThroughDetectedCharacteristic","CategoryDetection_AddedCharacteristic","CategoryDetection_CategoryDetectedInName","CategoryDetection_CharacteristicDetectedInName","CategoryRecodingRule_AddedCategory","CategoryRecodingRule_NoMapping","CategoryRecodingRule_NoScheme","CategoryRecodingRule_UnknownScheme","CategoryRecodingRule_UnknownSourceCategory","CityNameNormalization_NotRecognized","CityNameNormalization_Updated","CoreRule_AddedCoreFlag","DefaultNormalization_MatchName_Normalized","DefaultNormalization_StrippedName_Normalized","EmailUrlRule_InvalidEmail","EmailUrlRule_InvalidUrl","EmailUrlRule_ModifiedUrl","EntryPointRecoding_NoDecimalPoint","EvsRule_InconsistentSpot","EvsRule_NumberOfSpotsNull","ExternalIdNotUniqueForSupplierAndLocality","FaceUpdate_NoFaceFoundInSameDataset","FixedSupplierCategoriesRule_AddedBrand","FixedSupplierCategoriesRule_AddedCategory","FixedSupplierCategoriesRule_CategoryNotFound","FixedSupplierCategoriesRule_IgnoredCharacteristic","GenericAttributesRule_IsLandmark","GenericNormalizationRule_Normalized","LegacyAttributes_NoMappingFound","LocalityRule_RegionNotRecognized","LocusRule_Exception","LocusRule_NoDecimalPoint","LocusRule_NoPoint","LocusRule_Normalized","LocusRule_SplitAddress","NormalizationService","PhoneFaxRule_ForeignNumber","PhoneFaxRule_InvalidNumber","PhoneFaxRule_Normalized","PlaceRelation","ProcessingFlagsRule_DetectedFlag","ProductNormalizationService","RatingsRule_DuplicateRatingSource","RatingsRule_InvalidRating","RecodingService","RegexRule_Exception","RegexRule_Exception_AttributeCondition","RegexRule_Exception_LanguageCondition","RemoveAddressPartsRule_StrippedName_Normalized","RemoveBrandsRule_StrippedName_Normalized","RemoveCommonWordsRule_StrippedName_Normalized","RemoveDoubleQuotesRule_Name_Normalized","RemoveDuplicateNamesRule_Removed","RemoveLegalTypeRule_Name_Normalized","RemoveOnlyMinorEntryPointsRule_Removed","RemoveParenthesesRule_Name_Normalized","RemoveParenthesesRule_StrippedName_Normalized","UnwantedCharacters","ReplaceHtmlEntities_Name_Normalized","RetrieveMissingCountryRule_Normalized","StreetLocator_AddressNotFound","StreetLocator_NoResult","StreetLocator_UpdatedAddress","Test","TitleCasingRule_Name_Normalized","Advertizer","SpaceAroundCommaNormalized","Geocoding_TraceException","NormalizationTraceServiceAdapter","BuildingNumber_AddedRelation","Geocoding_EffectiveReverseGeocode","Geocoding_UnsupportedMultipleSuppliedPoints","Gp3Writer_Exception","Intake_Exception","IntakeServiceAdapter","LocalityRule_UsedSupplierLocality","ProductizationServiceAdapter","ProductNormalizationServiceAdapter","RecodingServiceAdapter","Removed_relation_without_end_point","AddressesRule_GeocodedHouseNumber","AddressesRule_NoHouseNumber","AddressesRule_SourceHouseNumber","AddressesRule_InvalidGeocodedHouseNumber","AddressesRule_InvalidSourceHouseNumber","AddressesRule_HouseNumberWithoutStreet","ArchivePlaceFieldNormalizer_FieldNormalization","ArchivePlaceFieldNormalizer_FieldLengthViolation","ArchivePlaceFieldNormalizer_RelatedAttributeRemoved","ArchiveFieldRule_Exception","BrandNamesRule_RemovedSuperfluousBrand","BrandNamesRule_SuppressedBrand","CardinalityRule_AddedDefaultValuesForMissingAttribute","CardinalityRule_OmittedExtraAttribute","CardinalityRule_MissingGdfFeatureCode","CardinalityRule_RemovedSuperfluousAttribute","CardinalityRule_Violation","ClassificationRule_NoRankFoundForGdf","ClassificationRule_FeatureTypeChangedAfterUnspecifiedRemoval","ClassificationRuleFieldEmpty","ClassificationRule_ShowFields","ClassificationRule_SubcategoryEmpty","CompositeEvsRule_LengthViolation","DataSelector_SourceAddressesTrumpNormalized","DataSelector_SourceCategoriesTrumpNormalized","DataSelector_SourceLocationsTrumpNormalized","DataSelector_SourceNamesTrumpNormalized","DataSelector_RemovedPreemptiveDueToSupplierRank","DefaultLanguageCodeAssignment_AssignedDefaultLanguage","DefaultLanguageCodeAssignment_NoDefaultLanguageAssigned","EntryPointsRule_EntryPointDatasetDifferentFromPoi","EntryPointsRule_EntryPointFailedAccuracy","EntryPointsRule_EntryPointTooFarFromPoi","EntryPointsRule_EntryPointTooFarFromPoiButIgnoredForMandatoryOrCore","EntryPointsRule_EntryPointTooFarFromPoiButIgnoredForConnectCountry","EntryPointsRule_EntryPointWithoutPoint","EntryPointsRule_NoMainEntryPointSoAllEntryPointsAndTheirRelationshipsRemoved","EntryPointsRule_SkipDistanceCheckForFeature","EntryPointsRule_TifEntryPointGeocodeFailedUseMappedEntryPoint","FaceUpdate_NoFaceFound","FaceUpdate_PlaceNotInValidArea","FaceUpdate_PlaceOrEntryPointInDummyArea","GP3PlaceOriginIds","GP3PlaceWriter_POI_UNIQUE_ID","Gp3ProductizationService_Exception","GenericAttributesRule_InvalidAttributeValue","GenericAttributesRule_UnmappedAttributeValue","GenericAttributesRule_NoMappingFound","GenericAttributesRule_DuplicateAttribute","GenericAttributesRule_NullGdfCodeDesc","GenericAttributesRule_FeatureDoesNotSupportQualityMark","Identifier_ExternalIdentifier","IsCore","IsMandatory","IsHighestRanked","InvalidCombinationInName","LocationDataRule_LogAccuracies","LocationDataRule_LogCoordinates","LocationDataRule_LogPoiDistance","LocationDataRule_NoAccuracies","LocationDataRule_NoCoordinates","TifSourceNotRejected_BADGEOCODE","MandatoryNotRejected_OOB","NotRejected_NOENTRYPOINT","NVLRelation","OfficialNamesRule_GeneratedAlternateNameFromBrand","OfficialNamesRule_GeneratedOfficialNameFromBrand","OfficialNamesRule_GeneratedOfficialNameFromLocality","AlternateNamesRule_GeneratedAlternateName","AlternateNamesRule_SkippedSimilarAlternateName","AlternateNamesRule_SkippedEqualAlternateName","NamesRule_InvalidCharactersInName","NamesRule_InvalidZeroInName","OpeningHoursRule_SkippedInvalid","PhoneFaxRule_NumberParseException","MapProcessing_EntryPointInWater","MapProcessing_PointInWater","MapProcessing_PointInDummyAdminArea","MapProcessing_PointOutsideCountry","Reject_BADGEOCODE","Reject_NOENTRYPOINT","Reject_NOMAP","Reject_OOB","Reject_TRUMP","Reject_Accepted","Reject_UNKNOWN","Reject_CATEGORY_BLACKLISTED","Reject_INVALID_CHARACTER","Reject_INVALID_ZERO_IN_NAME","RelatedFeatureUpdate_RestAreaRemoveServiceWithNoRelations","TrumperMerger_ClusterReplacedByMandatoryReclustering","TrumperMerger_NewClusterForMandatoryPlace","TrumperMerger_Reject","TrumperMerger_SupplierRank","VicinityUpdate_NoVicinityCodeFoundForCityCenter","Missing_Core_Relation","Missing_external_related_place","RelationsRule_InvalidRelation","RemoveInvalidRelations_InvalidRelationRemoved","RemoveInvalidRelations_InvalidCategoryRelationRemoved","RemoveInvalidRelations_InvalidDatasetRelationRemoved","RelatedFeatureUpdate_RestAreaAddMissingServiceForExistingRelations","OOB_Removed","ObservationApplied","ObservationNotApplied","MandatoryPlace_ReplacedByObservation","ObservationNotMatched","ObservationIncomplete","RemoveDuplicatePublishedId","LimitToOnePerLanguage","ResolvedCorrectly","ResolvedIncorrectly","ResolutionNotNeeded","PlaceHasNoAssociations","RejectedDuplicateCluster","AssignStableId_New","AssignStableId_Existing","LargePartition","Merged","OPProductizationService_Exception","OPPlaceOriginIds","Reject_NoCategory","Reject_NoLatLong","Reject_NoName","Reject_NoID","ProductizedAdvertizer","TEST"]}},{"name":"traceParameters","type":["null",{"type":"map","values":"string"}],"default":null}]} O	à'Eùh˘eﬁ∆´’ú Ù¸Ô∫Î·Ö≠Vñ{"mostSigBits": -8366237470359599651, "leastSigBits": -8606558714153413555} í,regexIsCaseInsensitive
falsenormalizedSenn√©ng regexReplacement  originalSenn√©ngproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ∫Î·Ö≠Vñ{"mostSigBits": -8366237470359599651, "leastSigBits": -8606558714153413555} í,regexIsCaseInsensitive
falsenormalizedSenningen regexReplacement  originalSenningenproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ŒÎ·Ö≠Vñ{"mostSigBits": -8366237470359599651, "leastSigBits": -8606558714153413555} í,regexIsCaseInsensitive
falsenormalizedSenningen regexReplacement  originalSenningenproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ŒÎ·Ö≠Vñ{"mostSigBits": -8366237470359599651, "leastSigBits": -8606558714153413555} tnormalizedsennengoriginalSenn√©ng ŒÎ·Ö≠Vñ{"mostSigBits": -8366237470359599651, "leastSigBits": -8606558714153413555} tnormalizedsenningenoriginalSenningen ŒÎ·Ö≠Vñ{"mostSigBits": -8366237470359599651, "leastSigBits": -8606558714153413555} tnormalizedsenningenoriginalSenningen ŒÎ·Ö≠Vñ{"mostSigBits": -8366237470359599651, "leastSigBits": -8606558714153413555} vnormalizedsennengoriginalSenn√©ng ŒÎ·Ö≠Vñ{"mostSigBits": -8366237470359599651, "leastSigBits": -8606558714153413555} vnormalizedsenningenoriginalSenningen ŒÎ·Ö≠Vñ{"mostSigBits": -8366237470359599651, "leastSigBits": -8606558714153413555} voriginalSenningennormalizedsenningen ŒÎ·Ö≠Vñ{"mostSigBits": -7758686929174246710, "leastSigBits": -6517989016908228259} í,regexIsCaseInsensitive
falsenormalizedAldringen regexReplacement  originalAldringenproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ŒÎ·Ö≠Vñ{"mostSigBits": -7758686929174246710, "leastSigBits": -6517989016908228259} tnormalizedaldringenoriginalAldringen ŒÎ·Ö≠Vñ{"mostSigBits": -7758686929174246710, "leastSigBits": -6517989016908228259} voriginalAldringennormalizedaldringen ‚Î·Ö≠Vñ{"mostSigBits": -7245514848348913000, "leastSigBits": -6520560663095489584} í,regexIsCaseInsensitive
falsenormalizedHaff Reimech regexReplacement  originalHaff Reimechproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ‚Î·Ö≠Vñ{"mostSigBits": -7245514848348913000, "leastSigBits": -6520560663095489584} tnormalizedhaff reimechoriginalHaff Reimech ‚Î·Ö≠Vñ{"mostSigBits": -7245514848348913000, "leastSigBits": -6520560663095489584} voriginalHaff Reimechnormalizedhaff reimech ‚Î·Ö≠Vñ{"mostSigBits": -7001017976217714672, "leastSigBits": -9094274290295529844} ™relatedIdî{"mostSigBits": 8937815644861383816, "leastSigBits": -8809791782935179403} ‚Î·Ö≠Vñ{"mostSigBits": -7001017976217714672, "leastSigBits": -9094274290295529844} í,regexIsCaseInsensitive
falsenormalizedGare regexReplacement  originalGareproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ‚Î·Ö≠Vñ{"mostSigBits": -7001017976217714672, "leastSigBits": -9094274290295529844} tnormalizedgareoriginalGare ‚Î·Ö≠Vñ{"mostSigBits": -7001017976217714672, "leastSigBits": -9094274290295529844} voriginalGarenormalizedgare ˆÎ·Ö≠Vñ{"mostSigBits": -6777208284469639491, "leastSigBits": -5418883174364769721} í,regexIsCaseInsensitive
falsenormalized Aire de Capellen regexReplacement  original Aire de Capellenproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ˆÎ·Ö≠Vñ{"mostSigBits": -6777208284469639491, "leastSigBits": -5418883174364769721} tnormalized aire de capellenoriginal Aire de Capellen ˆÎ·Ö≠Vñ{"mostSigBits": -6777208284469639491, "leastSigBits": -5418883174364769721} voriginal Aire de Capellennormalized aire de capellen ˆÎ·Ö≠Vñ{"mostSigBits": -6077206978530686207, "leastSigBits": -6561574581501599883} ™relatedIdî{"mostSigBits": 4660241244110930584, "leastSigBits": -6423165834225096270} ˆÎ·Ö≠Vñ{"mostSigBits": -6077206978530686207, "leastSigBits": -6561574581501599883} í,regexIsCaseInsensitive
falsenormalizedLux Airport regexReplacement  originalLux Airportproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ˆÎ·Ö≠Vñ{"mostSigBits": -6077206978530686207, "leastSigBits": -6561574581501599883} í,regexIsCaseInsensitive
falsenormalizedFindel regexReplacement  originalFindelproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ˆÎ·Ö≠Vñ{"mostSigBits": -6077206978530686207, "leastSigBits": -6561574581501599883} tnormalizedlux airportoriginalLux Airport ˆÎ·Ö≠Vñ{"mostSigBits": -6077206978530686207, "leastSigBits": -6561574581501599883} tnormalizedfindeloriginalFindel ˆÎ·Ö≠Vñ{"mostSigBits": -6077206978530686207, "leastSigBits": -6561574581501599883} vnormalizedlux airportoriginalLux Airport ˆÎ·Ö≠Vñ{"mostSigBits": -6077206978530686207, "leastSigBits": -6561574581501599883} voriginalFindelnormalizedfindel ˆÎ·Ö≠Vñ{"mostSigBits": -5562897415565720055, "leastSigBits": -5572348638479353650} í,regexIsCaseInsensitive
falsenormalizedM√ºllendorf regexReplacement  originalM√ºllendorfproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ˆÎ·Ö≠Vñ{"mostSigBits": -5562897415565720055, "leastSigBits": -5572348638479353650} í,regexIsCaseInsensitive
falsenormalizedM√´lleref regexReplacement  originalM√´llerefproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ˆÎ·Ö≠Vñ{"mostSigBits": -5562897415565720055, "leastSigBits": -5572348638479353650} í,regexIsCaseInsensitive
falsenormalizedM√ºllendorf regexReplacement  originalM√ºllendorfproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ˆÎ·Ö≠Vñ{"mostSigBits": -5562897415565720055, "leastSigBits": -5572348638479353650} tnormalizedmullendorforiginalM√ºllendorf ˆÎ·Ö≠Vñ{"mostSigBits": -5562897415565720055, "leastSigBits": -5572348638479353650} tnormalizedmellereforiginalM√´lleref ˆÎ·Ö≠Vñ{"mostSigBits": -5562897415565720055, "leastSigBits": -5572348638479353650} tnormalizedmullendorforiginalM√ºllendorf ˆÎ·Ö≠Vñ{"mostSigBits": -5562897415565720055, "leastSigBits": -5572348638479353650} vnormalizedmullendorforiginalM√ºllendorf ˆÎ·Ö≠Vñ{"mostSigBits": -5562897415565720055, "leastSigBits": -5572348638479353650} vnormalizedmellereforiginalM√´lleref ˆÎ·Ö≠Vñ{"mostSigBits": -5562897415565720055, "leastSigBits": -5572348638479353650} voriginalM√ºllendorfnormalizedmullendorf äÏ·Ö≠Vñ{"mostSigBits": -4913851693506999657, "leastSigBits": -6230452633196381757} 4originalI.N.C.C.I.normalized
INCCI äÏ·Ö≠Vñ{"mostSigBits": -4913851693506999657, "leastSigBits": -6230452633196381757} í,regexIsCaseInsensitive
falsenormalized
INCCI regexReplacement  original
INCCIproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX äÏ·Ö≠Vñ{"mostSigBits": -4913851693506999657, "leastSigBits": -6230452633196381757} í,regexIsCaseInsensitive
falsenormalized@Centre Hospitalier de Luxembourg regexReplacement  original@Centre Hospitalier de Luxembourgproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX äÏ·Ö≠Vñ{"mostSigBits": -4913851693506999657, "leastSigBits": -6230452633196381757} tnormalized
inccioriginal
INCCI äÏ·Ö≠Vñ{"mostSigBits": -4913851693506999657, "leastSigBits": -6230452633196381757} tnormalized@centre hospitalier de luxembourgoriginal@Centre Hospitalier de Luxembourg äÏ·Ö≠Vñ{"mostSigBits": -4913851693506999657, "leastSigBits": -6230452633196381757} vnormalized
inccioriginal
INCCI äÏ·Ö≠Vñ{"mostSigBits": -4913851693506999657, "leastSigBits": -6230452633196381757} vnormalized@centre hospitalier de luxembourgoriginal@Centre Hospitalier de Luxembourg äÏ·Ö≠Vñ{"mostSigBits": -4913851693506999657, "leastSigBits": -6230452633196381757} ºoriginal@centre hospitalier de luxembourgnormalized*centre hospitalier de äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} í,regexIsCaseInsensitive
falsenormalizedEsch-sur-S√ªre regexReplacement  originalEsch-sur-S√ªreproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} í,regexIsCaseInsensitive
falsenormalizedEsch-Sauer regexReplacement  originalEsch-Sauerproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} í,regexIsCaseInsensitive
falsenormalizedEschdorf regexReplacement  originalEschdorfproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} í,regexIsCaseInsensitive
falsenormalized"Esch an der Sauer regexReplacement  original"Esch an der Sauerproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} tnormalizedesch sur sureoriginalEsch-sur-S√ªre äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} tnormalizedesch saueroriginalEsch-Sauer äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} tnormalizedeschdorforiginalEschdorf äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} tnormalized"esch an der saueroriginal"Esch an der Sauer äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} vnormalizedesch sur sureoriginalEsch-sur-S√ªre äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} vnormalizedesch saueroriginalEsch-Sauer äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} vnormalizedeschdorforiginalEschdorf äÏ·Ö≠Vñ{"mostSigBits": -4752090929626527598, "leastSigBits": -8029570101312233153} voriginal"Esch an der Sauernormalized"esch an der sauer ûÏ·Ö≠Vñ{"mostSigBits": -4204321271667340811, "leastSigBits": -8077666219840866202} í,regexIsCaseInsensitive
falsenormalizedGlacis regexReplacement  originalGlacisproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ûÏ·Ö≠Vñ{"mostSigBits": -4204321271667340811, "leastSigBits": -8077666219840866202} tnormalizedglacisoriginalGlacis ûÏ·Ö≠Vñ{"mostSigBits": -4204321271667340811, "leastSigBits": -8077666219840866202} voriginalGlacisnormalizedglacis ûÏ·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} í,regexIsCaseInsensitive
falsenormalizedTLUX N10 Commune de Schengen//DEU B407 Perl regexReplacement  originalTLUX N10 Commune de Schengen//DEU B407 Perlproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ûÏ·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} í,regexIsCaseInsensitive
falsenormalizeddLUX N10 Commune de Schengen//DEU B407 Perl Br√ºcke regexReplacement  originaldLUX N10 Commune de Schengen//DEU B407 Perl Br√ºckeproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ûÏ·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} í,regexIsCaseInsensitive
falsenormalizeddLUX N10 Commune de Schengen//DEU B407 Perl Br√ºcke regexReplacement  originaldLUX N10 Commune de Schengen//DEU B407 Perl Br√ºckeproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ûÏ·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} í,regexIsCaseInsensitive
falsenormalizeddLUX N10 Commune de Schengen//DEU B407 Perl Br√ºcke regexReplacement  originaldLUX N10 Commune de Schengen//DEU B407 Perl Br√ºckeproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ûÏ·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} tnormalizedRlux n10 commune de schengen deu b407 perloriginalTLUX N10 Commune de Schengen//DEU B407 Perl ûÏ·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} tnormalized`lux n10 commune de schengen deu b407 perl bruckeoriginaldLUX N10 Commune de Schengen//DEU B407 Perl Br√ºcke ûÏ·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} tnormalized`lux n10 commune de schengen deu b407 perl bruckeoriginaldLUX N10 Commune de Schengen//DEU B407 Perl Br√ºcke ûÏ·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} tnormalized`lux n10 commune de schengen deu b407 perl bruckeoriginaldLUX N10 Commune de Schengen//DEU B407 Perl Br√ºcke ûÏ·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} vnormalizedRlux n10 commune de schengen deu b407 perloriginalTLUX N10 Commune de Schengen//DEU B407 Perl ûÏ·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} vnormalized`lux n10 commune de schengen deu b407 perl bruckeoriginaldLUX N10 Commune de Schengen//DEU B407 Perl Br√ºcke ≤Ï·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} vnormalized`lux n10 commune de schengen deu b407 perl bruckeoriginaldLUX N10 Commune de Schengen//DEU B407 Perl Br√ºcke ≤Ï·Ö≠Vñ{"mostSigBits": -2489015567266069897, "leastSigBits": -6527687795190684633} voriginaldLUX N10 Commune de Schengen//DEU B407 Perl Br√ºckenormalized`lux n10 commune de schengen deu b407 perl brucke ≤Ï·Ö≠Vñ{"mostSigBits": -2075762716056337151, "leastSigBits": -7565310238596444083} í,regexIsCaseInsensitive
falsenormalized Place de la Paix regexReplacement  original Place de la Paixproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ≤Ï·Ö≠Vñ{"mostSigBits": -2075762716056337151, "leastSigBits": -7565310238596444083} tnormalized place de la paixoriginal Place de la Paix ≤Ï·Ö≠Vñ{"mostSigBits": -2075762716056337151, "leastSigBits": -7565310238596444083} voriginal Place de la Paixnormalized place de la paix ≤Ï·Ö≠Vñ{"mostSigBits": -2024496014121744727, "leastSigBits": -6912820917912147414} VpatternQ8 detected in name¿{"value": "Q8 Hesperange", "language": "fr", "territory": null, "script": null, "variant": null}detected brandQ8 ≤Ï·Ö≠Vñ{"mostSigBits": -2024496014121744727, "leastSigBits": -6912820917912147414} N"inserted categoryFuel Stationdetected brandQ8 ∆Ï·Ö≠Vñ{"mostSigBits": -2024496014121744727, "leastSigBits": -6912820917912147414} í,regexIsCaseInsensitive
falsenormalizedQ8 Hesperange regexReplacement  originalQ8 Hesperangeproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ∆Ï·Ö≠Vñ{"mostSigBits": -2024496014121744727, "leastSigBits": -6912820917912147414} tnormalizedq8 hesperangeoriginalQ8 Hesperange ∆Ï·Ö≠Vñ{"mostSigBits": -2024496014121744727, "leastSigBits": -6912820917912147414} voriginalQ8 Hesperangenormalizedq8 hesperange ∆Ï·Ö≠Vñ{"mostSigBits": -1056875712164050512, "leastSigBits": -6944794262327202627} í,regexIsCaseInsensitive
falsenormalized2Wasserbillig - Oberbillig regexReplacement  original2Wasserbillig - Oberbilligproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ∆Ï·Ö≠Vñ{"mostSigBits": -1056875712164050512, "leastSigBits": -6944794262327202627} tnormalized.wasserbillig oberbilligoriginal2Wasserbillig - Oberbillig ∆Ï·Ö≠Vñ{"mostSigBits": -1056875712164050512, "leastSigBits": -6944794262327202627} voriginal2Wasserbillig - Oberbillignormalized.wasserbillig oberbillig ⁄Ï·Ö≠Vî{"mostSigBits": 1897180707935437477, "leastSigBits": -7893677111525811499} VpatternGulf detected in name¿{"value": "Gulf Seeblick", "language": "fr", "territory": null, "script": null, "variant": null}detected brandGulf ⁄Ï·Ö≠Vî{"mostSigBits": 1897180707935437477, "leastSigBits": -7893677111525811499} N"inserted categoryFuel Stationdetected brandGulf ⁄Ï·Ö≠Vî{"mostSigBits": 1897180707935437477, "leastSigBits": -7893677111525811499} í,regexIsCaseInsensitive
falsenormalizedGulf Seeblick regexReplacement  originalGulf Seeblickproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ⁄Ï·Ö≠Vî{"mostSigBits": 1897180707935437477, "leastSigBits": -7893677111525811499} tnormalizedgulf seeblickoriginalGulf Seeblick ⁄Ï·Ö≠Vî{"mostSigBits": 1897180707935437477, "leastSigBits": -7893677111525811499} voriginalGulf Seeblicknormalizedgulf seeblick ÓÏ·Ö≠Vî{"mostSigBits": 4660241244110930584, "leastSigBits": -6423165834225096270} í,regexIsCaseInsensitive
falsenormalizedLuxembourg regexReplacement  originalLuxembourgproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ÓÏ·Ö≠Vî{"mostSigBits": 4660241244110930584, "leastSigBits": -6423165834225096270} í,regexIsCaseInsensitive
falsenormalizedLuxemburg regexReplacement  originalLuxemburgproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ÓÏ·Ö≠Vî{"mostSigBits": 4660241244110930584, "leastSigBits": -6423165834225096270} í,regexIsCaseInsensitive
falsenormalizedL√´tzebuerg regexReplacement  originalL√´tzebuergproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ÓÏ·Ö≠Vî{"mostSigBits": 4660241244110930584, "leastSigBits": -6423165834225096270} tnormalizedluxembourgoriginalLuxembourg ÓÏ·Ö≠Vî{"mostSigBits": 4660241244110930584, "leastSigBits": -6423165834225096270} tnormalizedluxemburgoriginalLuxemburg ÓÏ·Ö≠Vî{"mostSigBits": 4660241244110930584, "leastSigBits": -6423165834225096270} tnormalizedletzebuergoriginalL√´tzebuerg ÓÏ·Ö≠Vî{"mostSigBits": 4660241244110930584, "leastSigBits": -6423165834225096270} vnormalizedluxembourgoriginalLuxembourg ÓÏ·Ö≠Vî{"mostSigBits": 4660241244110930584, "leastSigBits": -6423165834225096270} vnormalizedluxemburgoriginalLuxemburg ÓÏ·Ö≠Vî{"mostSigBits": 4660241244110930584, "leastSigBits": -6423165834225096270} voriginalL√´tzebuergnormalizedletzebuerg ñÌ·Ö≠Vî{"mostSigBits": 6317443456047729542, "leastSigBits": -6909276454143637423} VpatternQ8 detected in name∏{"value": "Q8 Bridel", "language": "fr", "territory": null, "script": null, "variant": null}detected brandQ8 ñÌ·Ö≠Vî{"mostSigBits": 6317443456047729542, "leastSigBits": -6909276454143637423} N"inserted categoryFuel Stationdetected brandQ8 ñÌ·Ö≠Vî{"mostSigBits": 6317443456047729542, "leastSigBits": -6909276454143637423} í,regexIsCaseInsensitive
falsenormalizedQ8 Bridel regexReplacement  originalQ8 Bridelproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX òÌ·Ö≠Vî{"mostSigBits": 6317443456047729542, "leastSigBits": -6909276454143637423} tnormalizedq8 brideloriginalQ8 Bridel òÌ·Ö≠Vî{"mostSigBits": 6317443456047729542, "leastSigBits": -6909276454143637423} vnormalizedq8 brideloriginalQ8 Bridel òÌ·Ö≠Vî{"mostSigBits": 6317443456047729542, "leastSigBits": -6909276454143637423} ºoriginalq8 bridelnormalizedq8 òÌ·Ö≠Vî{"mostSigBits": 6566945551389968649, "leastSigBits": -8164927757212819880} í,regexIsCaseInsensitive
falsenormalizedLuxembourg regexReplacement  originalLuxembourgproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX òÌ·Ö≠Vî{"mostSigBits": 6566945551389968649, "leastSigBits": -8164927757212819880} tnormalizedluxembourgoriginalLuxembourg òÌ·Ö≠Vî{"mostSigBits": 6566945551389968649, "leastSigBits": -8164927757212819880} vnormalizedluxembourgoriginalLuxembourg òÌ·Ö≠Vî{"mostSigBits": 6566945551389968649, "leastSigBits": -8164927757212819880} ºoriginalluxembourgnormalized  ¶Ì·Ö≠Vî{"mostSigBits": 6802319660500405703, "leastSigBits": -5056359161320365333} í,regexIsCaseInsensitive
falsenormalized0Rue du Fort Berlaimont 2 regexReplacement  original0Rue du Fort Berlaimont 2property name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ¶Ì·Ö≠Vî{"mostSigBits": 6802319660500405703, "leastSigBits": -5056359161320365333} tnormalized0rue du fort berlaimont 2original0Rue du Fort Berlaimont 2 ®Ì·Ö≠Vî{"mostSigBits": 6802319660500405703, "leastSigBits": -5056359161320365333} voriginal0Rue du Fort Berlaimont 2normalized0rue du fort berlaimont 2 ∞Ì·Ö≠Vî{"mostSigBits": 6916596512854789028, "leastSigBits": -6972018893385213987} í,regexIsCaseInsensitive
falsenormalized(Eurolines Luxembourg regexReplacement  original(Eurolines Luxembourgproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ∞Ì·Ö≠Vî{"mostSigBits": 6916596512854789028, "leastSigBits": -6972018893385213987} tnormalized(eurolines luxembourgoriginal(Eurolines Luxembourg ∞Ì·Ö≠Vî{"mostSigBits": 6916596512854789028, "leastSigBits": -6972018893385213987} vnormalized(eurolines luxembourgoriginal(Eurolines Luxembourg ≤Ì·Ö≠Vî{"mostSigBits": 6916596512854789028, "leastSigBits": -6972018893385213987} ºoriginal(eurolines luxembourgnormalizedeurolines ∫Ì·Ö≠Vî{"mostSigBits": 7746829010062035231, "leastSigBits": -7358691120806362457} í,regexIsCaseInsensitive
falsenormalizedClinique d'Eich regexReplacement  originalClinique d'Eichproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ∫Ì·Ö≠Vî{"mostSigBits": 7746829010062035231, "leastSigBits": -7358691120806362457} tnormalizedclinique d eichoriginalClinique d'Eich ∫Ì·Ö≠Vî{"mostSigBits": 7746829010062035231, "leastSigBits": -7358691120806362457} voriginalClinique d'Eichnormalizedclinique d eich ¬Ì·Ö≠Vî{"mostSigBits": 8937815644861383816, "leastSigBits": -8809791782935179403} í,regexIsCaseInsensitive
falsenormalizedLuxembourg regexReplacement  originalLuxembourgproperty name names.text.valueregexPattern^(\s|,)**regexIsWordBoundaries
falsesupplierTIFcountryLUX ƒÌ·Ö≠Vî{"mostSigBits": 8937815644861383816, "leastSigBits": -8809791782935179403} tnormalizedluxembourgoriginalLuxembourg ƒÌ·Ö≠Vî{"mostSigBits": 8937815644861383816, "leastSigBits": -8809791782935179403} vnormalizedluxembourgoriginalLuxembourg ƒÌ·Ö≠Vî{"mostSigBits": 8937815644861383816, "leastSigBits": -8809791782935179403} ºoriginalluxembourgnormalized  O	à'Eùh˘eﬁ∆´’ú 